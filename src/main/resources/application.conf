akka {
	loggers = ["akka.event.Logging$DefaultLogger"]
	loglevel = "INFO"
	stdout-loglevel = "ERROR"

	actor.deployment {
		/workers/router1 {
			router = round-robin-pool
			nr-of-instances = 5
		}
		/workers/router2 {
			router = random-pool
			nr-of-instances = 5
		}
	}
	
	extensions = [akka.persistence.Persistence]
	  persistence {	  
	    journal {
        # leveldb or inmem
	      plugin = "akka.persistence.journal.inmem"
	      auto-start-journals = ["akka.persistence.journal.inmem"]
	    }	  
	
	    	
	    snapshot-store {
	      plugin = "akka.persistence.snapshot-store.local"
	      auto-start-snapshot-stores = ["akka.persistence.snapshot-store.local"]
	    }	
	  }
	  		
}

blocking-io-dispatcher {
	type = Dispatcher
	executor = "thread-pool-executor"
	thread-pool-executor {
	fixed-pool-size = 2
	}
	throughput = 1
}

my-thread-pool-dispatcher {

  type = Dispatcher
  executor = "thread-pool-executor"

  thread-pool-executor {

    core-pool-size-min = 2

    core-pool-size-factor = 2.0
  
    core-pool-size-max = 10
  }
  
  throughput = 100
}
	
my-dispatcher {
  
  type = Dispatcher
  
  executor = "fork-join-executor"
  
  fork-join-executor {  
    parallelism-min = 2  
    parallelism-factor = 2.0  
    parallelism-max = 10
  }  
  
  throughput = 100
  
}

